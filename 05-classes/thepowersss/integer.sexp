(sequence (declare Integer (function (parameters) (sequence (return (class (declare val 0) (declare add (function (parameters this other) (sequence (return (+ (member (lookup this) val) (member (lookup other) val)))))) (declare sub (function (parameters this other) (sequence (return (- (member (lookup this) val) (member (lookup other) val)))))) (declare mul (function (parameters this other) (sequence (return (* (member (lookup this) val) (member (lookup other) val)))))) (declare div (function (parameters this other) (sequence (return (/ (member (lookup this) val) (member (lookup other) val)))))) (declare create (function (parameters this value) (sequence (assign (memloc (varloc this) val) (lookup value)) (return (lookup this)))))))))) (declare a (call (member (call (lookup Integer) (arguments)) create) (arguments 3))) (declare b (call (member (call (lookup Integer) (arguments)) create) (arguments 6))) (print (call (member (lookup a) add) (arguments (lookup b)))) (print (call (member (lookup a) sub) (arguments (lookup b)))) (print (call (member (lookup a) mul) (arguments (lookup b)))) (print (call (member (lookup b) div) (arguments (lookup a)))))
